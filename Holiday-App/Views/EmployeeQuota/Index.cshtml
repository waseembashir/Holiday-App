@model HolidayApp.Core.Model.EmployeeQuota
@using HolidayApp.Core.Helpers
@{
    ViewBag.Title = "My Holiday Quota";
}
@section calendar {
    <script src="~/Scripts/Chart.js"></script>
}

<h2>@ViewBag.Message</h2>
<div>
    @{
    var FirstDay = new DateTime(DateTime.Now.Year, 1, 1);
    var LastDay = new DateTime(DateTime.Now.Year, 12, 31);
    <h4>Current Holiday Period From @FirstDay.ToString("dd/MM/yyyy") to @LastDay.ToString("dd/MM/yyyy") of @ViewBag.Username</h4>

}
<hr />
<dl class="dl-horizontal">
    <dt>
        Total Entilement
    </dt>

    <dd>
        @ViewBag.Entitlement
    </dd>

    <dt>
        Holidays Taken
    </dt>

    <dd>
        @ViewBag.HolidaysTaken
    </dd>

    <dt>
        Booked this Year
    </dt>

    <dd>
        @ViewBag.BookedThisYear
    </dd>

    <dt>
        Left to book this year
    </dt>

    <dd>
        @ViewBag.Remaining
    </dd>

</dl>
</div>


<h4>Holidays Taken This Year:</h4>
@{
    string cls = "progress-bar-success";
    if (@ViewBag.BookedThisYear / @ViewBag.Entitlement * 100 >= 60)
    {
        cls = "progress-bar-danger";
    }
<div class="progress">
    <div class="progress-bar @Html.Raw(cls)" role="progressbar" aria-valuenow="@Html.Raw(ViewBag.Remaining)" aria-valuemin="0" aria-valuemax="@Html.Raw(ViewBag.Entitlement)" style="width: @Html.Raw(@ViewBag.BookedThisYear/@ViewBag.Entitlement*100)%;">
        @Html.Raw(@ViewBag.BookedThisYear/@ViewBag.Entitlement*100)%
        
    </div>
</div>
}
<div>
    <div class="canvas-holder col-md-6">
        <h5>Total Holidays Taken:</h5>
        <canvas id="chart-area" width="300" height="300" />
    </div>
    <div class="canvas-holder col-md-6" style="float:left">
        <h5>Holidays Taken This Year:</h5>
        <canvas id="chart-area2" width="300" height="300" />
    </div>
</div>
<script>

    var pieData = [

        @foreach (var grp in Helpers.HolidayTypesTaken(ViewBag.Username))
    {
           
            
            @Html.Raw("{value: " + grp.Value + ", color: '" + Helpers.GetHolidayTypeColor(grp.Key) + "',highlight: '"+Helpers.GetHolidayTypeColor(grp.Key)+"',label: '" + grp.Key + "'},")
    }
        
            

    ];
    function LightenDarkenColor(col, amt) {

        var usePound = false;

        if (col[0] == "#") {
            col = col.slice(1);
            usePound = true;
        }

        var num = parseInt(col, 16);

        var r = (num >> 16) + amt;

        if (r > 255) r = 255;
        else if (r < 0) r = 0;

        var b = ((num >> 8) & 0x00FF) + amt;

        if (b > 255) b = 255;
        else if (b < 0) b = 0;

        var g = (num & 0x0000FF) + amt;

        if (g > 255) g = 255;
        else if (g < 0) g = 0;

        return (usePound ? "#" : "") + (g | (b << 8) | (r << 16)).toString(16);

    }
    var pieData2 = [

       @foreach (var grp2 in Helpers.HolidayTypesTakenInYear(ViewBag.Username, DateTime.Now.Year))
    {
           
            
            @Html.Raw("{value: " + grp2.Value + ", color: '" + Helpers.GetHolidayTypeColor(grp2.Key) + "',highlight: '"+Helpers.GetHolidayTypeColor(grp2.Key)+"',label: '" + grp2.Key + "'},")
    }
        
          @Html.Raw("{value: " + @ViewBag.Remaining + ", color: '" + "green" + "',highlight: '" + "green" + "',label: '" + "ramaining" + "'},")   

    ];

    window.onload = function () {
        var ctx = document.getElementById("chart-area").getContext("2d");
        window.myPie = new Chart(ctx).Pie(pieData);
        var ctx = document.getElementById("chart-area2").getContext("2d");
        window.myPie = new Chart(ctx).Pie(pieData2);
    };



</script>
