@using System.Globalization;
@using HolidayApp.Core.Helpers;
@{
    ViewBag.Title = "Index";
}
@section calendar {

    <link href="~/Content/calendar.css" rel="stylesheet" />

    <script src="~/Scripts/jquery.year_calendar.js"></script>

    <script>
        function initCalendar() {
            //Days colorify
            var date_styles = [

       @{

           foreach (var item in ViewBag.GeneralHolidays)
            {
               /*NN: check whether frequency of holiday is yearly, then sets year to current year */
                if (item.Frequency == 0 && item.Type != "islamic")
                {
                    item.StartDate = Helpers.SetYearToCurrent(item.StartDate);
                    item.EndDate = Helpers.SetYearToCurrent(item.EndDate);

                }

                /*NN: subtracts 1 from month, as array used here in javascript is zero based */
                item.StartDate = item.StartDate.AddMonths(-1);
                item.EndDate = item.EndDate.AddMonths(-1);
                item.EndDate = item.EndDate.AddDays(1);

                /*NN: check whether type of holiday is islamic, then converts it to goergian before displaying */
               if (item.Type == "islamic")
               {

                   item.StartDate = Helpers.IslamicToGeorgian(item.StartDate);
                   item.EndDate = Helpers.IslamicToGeorgian(item.EndDate);
              
                            
                   
                    /*NN: check whether frequency of converetd islamic holiday is yearly, then sets year to current year */
                    if (item.Frequency == 0)
                    {
                        item.StartDate = Helpers.SetYearToCurrent(item.StartDate);
                        item.EndDate = Helpers.SetYearToCurrent(item.EndDate);
                    }
                }
                String str = "{ start: new Date(" + string.Format("{0:yyyy, MM, dd}", item.StartDate) + "), end: new Date(" + string.Format("{0:yyyy, MM, dd}", item.EndDate) + "), label: '"+item.Name+" public-holiday', title: 'public-holiday' },";
                @Html.Raw(str)
            }
            if (ViewBag.Holidays != null)
            {
                
                foreach (var item2 in ViewBag.Holidays)
                {
                    /*NN: subtracts 1 from month, as array used here in javascript is zero based */
                    item2.StartDate = item2.StartDate.AddMonths(-1);
                    item2.EndDate = item2.EndDate.AddMonths(-1);
                    
                    String str =  "{ start: new Date("+string.Format("{0:yyyy, MM, dd}", item2.StartDate)+"), end: new Date("+string.Format("{0:yyyy, MM, dd}", item2.EndDate)+"), label: 'pending', title: 'pending' },";
                @Html.Raw(str)
               
                    if (item2.StartDate == item2.EndDate && item2.HalfDay == null)
                    {
                        item2.EndDate = item2.EndDate.AddDays(1);
                    String str2 =  "{ start: new Date("+string.Format("{0:yyyy, MM, dd}", item2.StartDate)+"), end: new Date("+string.Format("{0:yyyy, MM, dd}", item2.EndDate)+"), label: 'pending', title: 'pending' },";
                     @Html.Raw(str2)
                    }
       
       
       
                }
            }

        }
                { start: new Date(2013, 0, 2), end: new Date(2013, 0, 3), label: 'pending', title: 'pending' },
                { start: new Date(2013, 3, 2), end: new Date(2013, 3, 3), label: 'holiday', title: 'holiday' },
                { start: new Date(2013, 5, 5), end: new Date(2013, 5, 7), label: 'sickness', title: 'sickness' },
                { start: new Date(2013, 7, 2), end: new Date(2013, 7, 3), label: 'public-holiday', title: 'public-holiday' },
                { start: new Date(2013, 9, 2), end: new Date(2013, 9, 3), label: 'travel', title: 'travel' }


            ];

            //Events to click
            var events = [
            ];

            //NN:Orange corners for half day
            var halfDays = [
                 @{

           /*NN: get half days */
           if (ViewBag.Holidays != null)
            {
                foreach (var item in ViewBag.Holidays)
                {
                 if(item.HalfDay != null)
                 {
                    
                     String str = "{ date: new Date(" + string.Format("{0:yyyy, MM, dd}", item.EndDate) + "), title: 'Half Day' },";
               
                     @Html.Raw(str) }
                
                }
            }

        }

               
            ];
            var markers = halfDays;

            var event_click = function (evt) {
                var _id = evt.data('_id');
                $.each(events, function (i, e) {
                    if (e._id == _id)
                        alert(e.title);
                });
            }

            var range_select = function (day1, day2) {
                var d1 = new Date(day1.data('date'));
                var d2 = new Date(day2.data('date'));
                d1.setHours(12, 0);
                d2.setHours(12, 0);
                selected_range_start = d1;
                selected_range_end = d2;
            }

            var range_unselect = function () {
                selected_range_start = false;
                selected_range_end = false;
            }

            var marker_click = function (evt) {

            }
           
            $("#calendar-holder").year_calendar({
               // year: 2013, // Optional, defaults to current year - pass in a year - Integer or String
                scroll_to_date: true, // Scroll to the current date?,
                date_styles: date_styles,
                events: events,
                event_click: event_click,
                //day_click: day_click,
                range_select: range_select,
                range_unselect: range_unselect,
                markers: markers,
                marker_click: marker_click
            });
        }

        $(document).ready(function () {
            initCalendar();
            $(".day").click(function () {
                var myClasses = this.classList;
                if (myClasses[3] != 'selected')
                    $("#selection").text(myClasses[3]);
                    
            });
        })

    </script>
}
<h2>Calender</h2>
<div id='calendar-holder'></div>
<br />
<br />
<P>
    <div class="alert alert-success">Islamic holidays (exact date is subject to moon-sighting).</div>

</P>


